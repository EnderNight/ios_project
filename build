#!/bin/sh


# Output colors
RED='\033[0;31m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
GREEN='\033[0;32m'
BLACK='\033[0;30m'

## Bold
BLUE_BOLD='\033[1;34m'
GREEN_BOLD='\033[1;32m'
YELLOW_BOLD='\033[1;33m'
RED_BOLD='\033[1;31m'

## Background
ON_BLUE='\033[44m'
ON_YELLOW='\033[43m'
ON_RED='\033[41m'
ON_GREEN='\033[42m'

NC='\033[0m' # No color

# Recurring words
INFO=${BLUE_BOLD}INFO${NC}
WARNING=${YELLOW_BOLD}WARNING${NC}
ERROR=${RED_BOLD}ERROR${NC}
SUCCESS=${GREEN_BOLD}SUCCESS${NC}




# Variables

IS_OUTSIDE_REPO=0

# build-linux -> folder containing build files generated by CMake
CMAKE_CUST_BUILD_DIR=build-linux

# Base directory
BASEDIR="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"




# Verifying build clean
if [ $# -gt 0 ]
then
    if [ $1 = "clean" ]
    then
        rm -rf ${CMAKE_CUST_BUILD_DIR} ios_project .CMakeLists.txt
        exit 0
    fi
fi




# Tests if script is launched at the correct location
if [ "${PWD}" != "${BASEDIR}" ]; then

    IS_OUTSIDE_REPO=1
    echo -e "${WARNING}: Script executed outside of the 'ios_project' repo root directory."
    echo -e "Changing working directory to ${BASEDIR}."

    pushd "${BASEDIR}" > /dev/null
    echo

fi



build_cmake () {
    echo
    if ( cmake -S . -B ${CMAKE_CUST_BUILD_DIR} ); then
        echo
        echo -e "${SUCCESS}: CMake project built."
    else
        echo
        echo -e "${ERROR}: Exited due to errors from 'cmake'."
        exit 1
    fi
    echo
}

# CMake build
if [ ! -d "${CMAKE_CUST_BUILD_DIR}" ]
then
    echo -e "${INFO}: '${CMAKE_CUST_BUILD_DIR}' directory not found. Running cmake in release mode."

    cp "CMakeLists.txt" ".CMakeLists.txt"
    
    build_cmake
fi

if [ -f ".CMakeLists.txt" ] && ! cmp -s "CMakeLists.txt" ".CMakeLists.txt"
then
    echo -e "${INFO}: CMakeLists.txt updated, running cmake in release mode."

    cp "CMakeLists.txt" ".CMakeLists.txt"

    build_cmake
fi




# Make compiling
echo -e "${INFO}: Compiling project with 'make'"
echo
pushd "${CMAKE_CUST_BUILD_DIR}" > /dev/null
    if ( make ); then
        echo
        echo -e "${SUCCESS}: 'ios_project' executable built."
    else
        echo
        echo -e "${ERROR}: Exited due to errors from 'make'." 
        exit 1
    fi
popd > /dev/null



# Moving executable inside root directory
echo
echo -e "${INFO}: Moving compiled executable to root directory."
mv "${CMAKE_CUST_BUILD_DIR}"/ios_project "${PWD}"


if [ ${IS_OUTSIDE_REPO} -eq 1 ]; then popd > /dev/null; fi
